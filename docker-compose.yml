version: '3'

services:
  mongodb:
    container_name: oscbdb
    image: mongo:4.2.1
    restart: always
    command: mongod --port 65528
    ports:
      - 65528:65528
    volumes:
      - /ps/code/db:/data/db
    networks:
      - oscb-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: oscbdb
      ME_CONFIG_MONGODB_PORT: "65528"
    ports:
      - "0.0.0.0:8081:8081"
    depends_on:
      - mongodb
    networks:
      - oscb-network

  redis:
    image: "redis:6-alpine"
    hostname: redis
    command: redis-server --port 6381 --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    ports:
      # - 6379:6379
      - 6381:6381
    networks:
      - oscb-network

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq 
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - ./rabbitmq.env
    volumes:
      - /ps/code/db/rabbitmq/data/:/var/lib/rabbitmq/
      - /ps/code/db/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - oscb-network

  # nginx-gateway:
  #   image: nginx:stable-alpine
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d
  #     # - /etc/ssl:/etc/ssl
  #   ports:
  #     - 80:80
  #     # - 443:443
  #   restart: always
  #   networks:
  #     - oscb-network

  # web:
  #   build: 
  #     context: ./web/
  #     dockerfile: Dockerfile
  #   container_name: oscbweb
  #   restart: always
  #   ports:
  #     - 8083:8083
  #   volumes:
  #     - Predictions:/app/data/results
  #     - Uploads:/app/data/upload
  #     - Errors:/app/data/errors
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - oscb-network

  celery-api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: oscb_celery_api
    command: python3 main.py
    restart: always
    ports:
      - 5000:5000
    volumes:
      - Predictions:/data/results
      - Uploads:/data/upload
      - Errors:/data/errors
    networks:
      - oscb-network
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
      - rabbitmq

  worker1:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: oscb_worker1
    command: celery -A main.celery worker --loglevel=info -Q tools,workflows
    # command: celery -A main.celery worker --loglevel=info -Q tools, workflows -P gevent -c 1
    # command: celery --app project.server.tasks.celery worker -P solo
    # command: celery --app project.server.tasks.celery worker -P gevent -c 1
    # command: celery --app project.server.tasks.celery worker --loglevel=info --logfile=project/logs/celery.log -P gevent
    # command: celery multi start 3 -A project.server.tasks.celery worker -l info
    env_file:
      - .env
    deploy:
      resources:
         limits:
            cpus: "10"
    volumes:
      - Predictions:/data/results
      - Uploads:/data/upload
      - Errors:/data/errors
    networks:
      - oscb-network
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - celery-api

  worker2:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: oscb_worker2
    command: celery -A main.celery worker --loglevel=info -Q tools,workflows
    # command: celery -A main.celery worker --loglevel=info -Q tools, workflows -P gevent -c 1
    # command: celery --app project.server.tasks.celery worker -P solo 
    # command: celery --app project.server.tasks.celery worker -P gevent -c 1
    # command: celery --app project.server.tasks.celery worker --loglevel=info --logfile=project/logs/celery.log -P gevent
    # command: celery multi start 3 -A project.server.tasks.celery worker -l info
    env_file:
      - .env
    deploy:
      resources:
         limits:
            cpus: "10"
    volumes:
      - Predictions:/data/results
      - Uploads:/data/upload
      - Errors:/data/errors
    networks:
      - oscb-network
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - celery-api

  worker3:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: oscb_worker3
    command: celery -A main.celery worker --loglevel=info -Q tools,workflows
    # command: celery -A main.celery worker --loglevel=info -Q tools, workflows -P gevent -c 1
    # command: celery --app project.server.tasks.celery worker -P solo 
    # command: celery --app project.server.tasks.celery worker -P gevent -c 1
    # command: celery --app project.server.tasks.celery worker --loglevel=info --logfile=project/logs/celery.log -P gevent
    # command: celery multi start 3 -A project.server.tasks.celery worker -l info
    env_file:
      - .env
    deploy:
      resources:
         limits:
            cpus: "10"
    volumes:
      - Predictions:/data/results
      - Uploads:/data/upload
      - Errors:/data/errors
    networks:
      - oscb-network
    depends_on:
      - mongodb
      - redis
      - rabbitmq
      - celery-api

  dashboard:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: oscb_dashboard
    command: celery --app main.celery flower --port=5555 --broker=amqp://admin:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81@rabbitmq:5672//
    ports:
      - 5555:5555
    env_file:
      - .env
    depends_on:
      - celery-api
      - rabbitmq
      - redis
    networks:
      - oscb-network

networks:
  oscb-network:
    driver: bridge

volumes:
  Predictions: 
  Uploads:
  Errors: